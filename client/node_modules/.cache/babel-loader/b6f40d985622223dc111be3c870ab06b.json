{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pamud\\\\Desktop\\\\mern\\\\MERN\\\\frontend\\\\src\\\\components\\\\admin\\\\test.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DynamicInput() {\n  _s();\n\n  const [values, setValues] = useState({\n    val: []\n  });\n\n  function createInputs() {\n    return values.val.map((el, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: el || '',\n        onChange: handleChange.bind(i)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"remove\",\n        name: i,\n        onClick: removeClick.bind(i)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }, this));\n  }\n\n  function handleChange(event) {\n    let vals = [...values.val];\n    vals[this] = event.target.value;\n    setValues({\n      val: vals\n    });\n  }\n\n  const addClick = () => {\n    setValues({\n      val: [...values.val, '']\n    });\n  };\n\n  const removeClick = event => {\n    let vals = [...values.val];\n    let index = Number(event.target.name);\n    vals.splice(index, 1);\n    setValues({\n      val: vals\n    });\n  };\n\n  le;\n\n  const handleSubmit = event => {\n    alert('A name was submitted: ' + values.val);\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [createInputs(), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"add more\",\n      onClick: addClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this);\n}\n\n_s(DynamicInput, \"g8md+sKWHHbIiNpYowMqsDO98PE=\");\n\n_c = DynamicInput;\nexport default DynamicInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"DynamicInput\");","map":{"version":3,"names":["React","useState","DynamicInput","values","setValues","val","createInputs","map","el","i","handleChange","bind","removeClick","event","vals","target","value","addClick","index","Number","name","splice","le","handleSubmit","alert","preventDefault"],"sources":["C:/Users/pamud/Desktop/mern/MERN/frontend/src/components/admin/test.js"],"sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\n\r\nfunction DynamicInput() {\r\n\r\n    const [values, setValues] = useState({ val: []});\r\n\r\n      function createInputs() {\r\n        return values.val.map((el, i) =>\r\n          <div key={i}>\r\n            <input type=\"text\" value={el||''} onChange={handleChange.bind(i)} />\r\n            <input type='button' value='remove' name={i} onClick={removeClick.bind(i)} />\r\n          </div>\r\n        );\r\n      }\r\n\r\n    function handleChange(event) {\r\n      let vals = [...values.val];\r\n      vals[this] = event.target.value;\r\n      setValues({ val: vals });\r\n    }\r\n\r\n    const addClick = () => {\r\n      setValues({ val: [...values.val, '']})\r\n    }\r\n\r\n    const removeClick = (event) => {\r\n      let vals = [...values.val];\r\n      let index = Number(event.target.name);\r\n      vals.splice(index, 1);\r\n      setValues({ val: vals });\r\n    }\r\n    le\r\n    const handleSubmit = event => {\r\n      alert('A name was submitted: ' + values.val);\r\n      event.preventDefault();\r\n    }\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n          {createInputs()}\r\n          <input type='button' value='add more' onClick={addClick} />\r\n          <input type=\"submit\" value=\"Submit\" />\r\n      </form>\r\n    );\r\n\r\n}\r\n\r\nexport default DynamicInput;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,YAAT,GAAwB;EAAA;;EAEpB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC;IAAEI,GAAG,EAAE;EAAP,CAAD,CAApC;;EAEE,SAASC,YAAT,GAAwB;IACtB,OAAOH,MAAM,CAACE,GAAP,CAAWE,GAAX,CAAe,CAACC,EAAD,EAAKC,CAAL,kBACpB;MAAA,wBACE;QAAO,IAAI,EAAC,MAAZ;QAAmB,KAAK,EAAED,EAAE,IAAE,EAA9B;QAAkC,QAAQ,EAAEE,YAAY,CAACC,IAAb,CAAkBF,CAAlB;MAA5C;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAO,IAAI,EAAC,QAAZ;QAAqB,KAAK,EAAC,QAA3B;QAAoC,IAAI,EAAEA,CAA1C;QAA6C,OAAO,EAAEG,WAAW,CAACD,IAAZ,CAAiBF,CAAjB;MAAtD;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA,GAAUA,CAAV;MAAA;MAAA;MAAA;IAAA,QADK,CAAP;EAMD;;EAEH,SAASC,YAAT,CAAsBG,KAAtB,EAA6B;IAC3B,IAAIC,IAAI,GAAG,CAAC,GAAGX,MAAM,CAACE,GAAX,CAAX;IACAS,IAAI,CAAC,IAAD,CAAJ,GAAaD,KAAK,CAACE,MAAN,CAAaC,KAA1B;IACAZ,SAAS,CAAC;MAAEC,GAAG,EAAES;IAAP,CAAD,CAAT;EACD;;EAED,MAAMG,QAAQ,GAAG,MAAM;IACrBb,SAAS,CAAC;MAAEC,GAAG,EAAE,CAAC,GAAGF,MAAM,CAACE,GAAX,EAAgB,EAAhB;IAAP,CAAD,CAAT;EACD,CAFD;;EAIA,MAAMO,WAAW,GAAIC,KAAD,IAAW;IAC7B,IAAIC,IAAI,GAAG,CAAC,GAAGX,MAAM,CAACE,GAAX,CAAX;IACA,IAAIa,KAAK,GAAGC,MAAM,CAACN,KAAK,CAACE,MAAN,CAAaK,IAAd,CAAlB;IACAN,IAAI,CAACO,MAAL,CAAYH,KAAZ,EAAmB,CAAnB;IACAd,SAAS,CAAC;MAAEC,GAAG,EAAES;IAAP,CAAD,CAAT;EACD,CALD;;EAMAQ,EAAE;;EACF,MAAMC,YAAY,GAAGV,KAAK,IAAI;IAC5BW,KAAK,CAAC,2BAA2BrB,MAAM,CAACE,GAAnC,CAAL;IACAQ,KAAK,CAACY,cAAN;EACD,CAHD;;EAKA,oBACE;IAAM,QAAQ,EAAEF,YAAhB;IAAA,WACKjB,YAAY,EADjB,eAEI;MAAO,IAAI,EAAC,QAAZ;MAAqB,KAAK,EAAC,UAA3B;MAAsC,OAAO,EAAEW;IAA/C;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI;MAAO,IAAI,EAAC,QAAZ;MAAqB,KAAK,EAAC;IAA3B;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQH;;GA3CQf,Y;;KAAAA,Y;AA6CT,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}